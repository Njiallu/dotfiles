" Filename: <%- scheme %>.vim (https://github.com/atelierbram/Base2Tone-vim/blob/master/autoload/lightline/colorscheme/<%- scheme %>.vim)
" Scheme: <%- author %>
" Info: http://base2t.one/
" License: MIT License

let s:cuicolors = {
      \ 'base03': [ '8', '<%- base["a0"]["hex"] %>', 'DarkGray' ],
      \ 'base02': [ '0', '<%- base["a1"]["hex"] %>', 'Black' ],
      \ 'base01': [ '10', '<%- base["a4"]["hex"] %>', 'LightGreen' ],
      \ 'base00': [ '11', '<%- base["a5"]["hex"] %>', 'LightYellow' ],
      \ 'base0':  [ '12', '<%- base["a6"]["hex"] %>', 'LightBlue' ],
      \ 'base1':  [ '14', '<%- base["a7"]["hex"] %>', 'LightCyan' ],
      \ 'base2': [ '7', '<%- base["b6"]["hex"] %>', 'LightGray' ],
      \ 'base3': [ '15', '<%- base["b7"]["hex"] %>', 'White' ],
      \ 'yellow': [ '3', '<%- base["d7"]["hex"] %>', 'DarkYellow' ],
      \ 'orange': [ '9', '<%- base["d5"]["hex"] %>', 'LightRed' ],
      \ 'red': [ '1', '<%- base["b0"]["hex"] %>', 'DarkRed' ],
      \ 'magenta': [ '5', '<%- base["b3"]["hex"] %>', 'DarkMagenta' ],
      \ 'violet': [ '13', '<%- base["b1"]["hex"] %>', 'LightMagenta' ],
      \ 'blue': [ '4', '<%- base["b2"]["hex"] %>', 'DarkBlue' ],
      \ 'cyan': [ '6', '<%- base["d0"]["hex"] %>', 'DarkCyan' ],
      \ 'green': [ '2', '<%- base["d4"]["hex"] %>', 'DarkGreen' ],
      \ }

" The following condition only applies for the console and is the same
" condition vim-colors-<%- scheme %> uses to determine which set of colors
" to use.
let s:<%- scheme %>_termcolors = get(g:, '<%- scheme %>_termcolors', 256)
if s:<%- scheme %>_termcolors != 256 && &t_Co >= 16
  let s:cuiindex = 0
elseif s:<%- scheme %>_termcolors == 256
  let s:cuiindex = 1
else
  let s:cuiindex = 2
endif

let s:base03 = [ '#<%- base["A0"]["hex"] %>', s:cuicolors.base03[s:cuiindex] ]
let s:base02 = [ '#<%- base["A1"]["hex"] %>', s:cuicolors.base02[s:cuiindex] ]
let s:base01 = [ '#<%- base["A4"]["hex"] %>', s:cuicolors.base01[s:cuiindex] ]
let s:base00 = [ '#<%- base["A5"]["hex"] %>', s:cuicolors.base00[s:cuiindex] ]
let s:base0 = [ '#<%- base["A6"]["hex"] %>', s:cuicolors.base0[s:cuiindex] ]
let s:base1 = [ '#<%- base["A7"]["hex"] %>', s:cuicolors.base1[s:cuiindex] ]
let s:base2 = [ '#<%- base["B6"]["hex"] %>', s:cuicolors.base2[s:cuiindex] ]
let s:base3 = [ '#<%- base["B7"]["hex"] %>', s:cuicolors.base3[s:cuiindex] ]
let s:yellow = [ '#<%- base["D7"]["hex"] %>', s:cuicolors.yellow[s:cuiindex] ]
let s:orange = [ '#<%- base["D5"]["hex"] %>', s:cuicolors.orange[s:cuiindex] ]
let s:red = [ '#<%- base["B0"]["hex"] %>', s:cuicolors.red[s:cuiindex] ]
let s:magenta = [ '#<%- base["B3"]["hex"] %>', s:cuicolors.magenta[s:cuiindex] ]
let s:violet = [ '#<%- base["B1"]["hex"] %>', s:cuicolors.violet[s:cuiindex] ]
let s:blue = [ '#<%- base["B2"]["hex"] %>', s:cuicolors.blue[s:cuiindex] ]
let s:cyan = [ '#<%- base["D0"]["hex"] %>', s:cuicolors.cyan[s:cuiindex] ]
let s:green = [ '#<%- base["D4"]["hex"] %>', s:cuicolors.green[s:cuiindex] ]

if lightline#colorscheme#background() ==# 'light'
  let [ s:base03, s:base3 ] = [ s:base3, s:base03 ]
  let [ s:base02, s:base2 ] = [ s:base2, s:base02 ]
  let [ s:base01, s:base1 ] = [ s:base1, s:base01 ]
  let [ s:base00, s:base0 ] = [ s:base0, s:base00 ]
  let [ s:blue, s:green ] = [ s:green, s:blue ]
endif

let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}
let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]
let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]
let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]
let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]
let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]
let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]
let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]
let s:p.normal.middle = [ [ s:base1, s:base02 ] ]
let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]
let s:p.tabline.left = [ [ s:base03, s:base00 ] ]
let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]
let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]
let s:p.tabline.right = copy(s:p.normal.right)
let s:p.normal.error = [ [ s:base03, s:red ] ]
let s:p.normal.warning = [ [ s:base03, s:yellow ] ]

let g:lightline#colorscheme#<%- scheme %>#palette = lightline#colorscheme#flatten(s:p)
let s:base03 = [ '#<%- base["A0"]["hex"] %>', <%- base["a0"]["hex"] %>]
let s:base02 = [ '#<%- base["A1"]["hex"] %>', <%- base["a1"]["hex"] %>]
let s:base01 = [ '#<%- base["A4"]["hex"] %>', <%- base["a4"]["hex"] %>]
let s:base00 = [ '#<%- base["A5"]["hex"] %>', <%- base["a5"]["hex"] %>]
let s:base0 = [ '#<%- base["A6"]["hex"] %>', <%- base["a6"]["hex"] %>]
let s:base1 = [ '#<%- base["A7"]["hex"] %>', <%- base["a7"]["hex"] %>]
let s:base2 = [ '#<%- base["B6"]["hex"] %>', <%- base["b6"]["hex"] %>]
let s:base3 = [ '#<%- base["B7"]["hex"] %>', <%- base["b7"]["hex"] %>]
let s:yellow = [ '#<%- base["D7"]["hex"] %>', <%- base["d7"]["hex"] %>]
let s:orange = [ '#<%- base["D5"]["hex"] %>', <%- base["d5"]["hex"] %>]
let s:red = [ '#<%- base["B0"]["hex"] %>', <%- base["b0"]["hex"] %>]
let s:magenta = [ '#<%- base["B3"]["hex"] %>', <%- base["b3"]["hex"] %>]
let s:violet = [ '#<%- base["B1"]["hex"] %>', <%- base["b1"]["hex"] %>]
let s:blue = [ '#<%- base["B2"]["hex"] %>', <%- base["b2"]["hex"] %>]
let s:cyan = [ '#<%- base["D0"]["hex"] %>', <%- base["d0"]["hex"] %>]
let s:green = [ '#<%- base["D4"]["hex"] %>', <%- base["d4"]["hex"] %>]

if lightline#colorscheme#background() ==# 'light'
  let [ s:base03, s:base3 ] = [ s:base3, s:base03 ]
  let [ s:base02, s:base2 ] = [ s:base2, s:base02 ]
  let [ s:base01, s:base1 ] = [ s:base1, s:base01 ]
  let [ s:base00, s:base0 ] = [ s:base0, s:base00 ]
  let [ s:blue, s:green ] = [ s:green, s:blue ]
endif

let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}
let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]
let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]
let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]
let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]
let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]
let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]
let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]
let s:p.normal.middle = [ [ s:base1, s:base02 ] ]
let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]
let s:p.tabline.left = [ [ s:base03, s:base00 ] ]
let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]
let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]
let s:p.tabline.right = copy(s:p.normal.right)
let s:p.normal.error = [ [ s:base03, s:red ] ]
let s:p.normal.warning = [ [ s:base03, s:yellow ] ]

let g:lightline#colorscheme#<%- scheme %>#palette = lightline#colorscheme#flatten(s:p)
